name: Platform Wheels

on:
  workflow_dispatch:
  #pull_request:
  push:
    branches:
      - master

env:
  CIBW_TEST_COMMAND: pytest {project}/tests
  CIBW_TEST_EXTRAS: test

jobs:
  sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      # disabled here so sdist is clean
      #with:
        #submodules: true

    - name: Build sdist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist/*.tar.gz

  build:
    name: ${{ matrix.os }} platform wheels
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - uses: pypa/cibuildwheel@v1.12.0
      env:
        CMAKE_BUILD_OVERRIDE: Release
        CIBW_SKIP: cp27-*
        CIBW_ARCHS_MACOS: auto universal2
        CIBW_TEST_SKIP: "*universal2:arm64"
        CIBW_TEST_EXTRAS: test
        CIBW_TEST_COMMAND: pytest {project}/tests
        CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET=10.09
        #CIBW_ENVIRONMENT_WINDOWS: 'CMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake'

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: wheelhouse/*.whl

  check_artifacts:
    name: Check artifacts are correct
    needs: [build]
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
        
    - name: Check/display number of downloaded artifacts
      run: .github/workflows/wheel-check.sh 38
      shell: bash
